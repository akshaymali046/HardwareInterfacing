Archive member included because of file (symbol)

c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_mulsi3.o)
                              com_def.o (__mulsi3)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
                              com_def.o (__divmodhi4)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodsi4.o)
                              com_def.o (__divmodsi4)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
                              c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
                              atmega8pir.o (__do_copy_data)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
                              atmega8pir.o (__do_clear_bss)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o) (__udivmodhi4)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodsi4.o)
                              c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodsi4.o) (__udivmodsi4)
c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4\libc.a(strcpy.o)
                              atmega8pir.o (strcpy)

Allocating common symbols
Common symbol       size              file

rx_buffer           0xa0              uart.o
buff_index          0x1               uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
LOAD atmega8pir.o
LOAD com_def.o
LOAD uart.o
LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a
LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4ae
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_9
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e       0x80 atmega8pir.o
                0x0000005e                main
 .text          0x000000de      0x216 com_def.o
                0x000001cc                map
                0x000000de                integer_to_char
                0x000001c2                char2num
                0x0000025a                char_to_int
                0x0000018c                hex_to_char
 .text          0x000002f4       0xa2 uart.o
                0x00000360                process_uart_data
                0x0000033c                print_uart
                0x0000030c                send2uart
                0x000002f4                init_usart
                0x00000304                usart_putchar
                0x00000320                send_ATcommand
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_mulsi3.o)
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodsi4.o)
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
 .text          0x00000396        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodsi4.o)
 .text          0x00000396        0xe c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4\libc.a(strcpy.o)
                0x00000396                strcpy
                0x000003a4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000003a4       0x3e c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_mulsi3.o)
                0x000003a4                __mulsi3
 .text.libgcc   0x000003e2       0x26 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
                0x000003e2                __divmodhi4
                0x000003e2                _div
 .text.libgcc   0x00000408       0x36 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodsi4.o)
                0x00000408                __divmodsi4
 .text.libgcc   0x0000043e        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x0000043e        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000043e        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000043e       0x28 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
                0x0000043e                __udivmodhi4
 .text.libgcc   0x00000466       0x44 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodsi4.o)
                0x00000466                __udivmodsi4
                0x000004aa                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004aa        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
                0x000004aa                exit
                0x000004aa                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004aa        0x4 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000004ae                _etext = .

.data           0x00800060       0x20 load address 0x000004ae
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060       0x1f atmega8pir.o
 .data          0x0080007f        0x0 com_def.o
 .data          0x0080007f        0x0 uart.o
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_mulsi3.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodsi4.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodsi4.o)
 .data          0x0080007f        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4\libc.a(strcpy.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800080                . = ALIGN (0x2)
 *fill*         0x0080007f        0x1 00
                0x00800080                _edata = .
                0x00800080                PROVIDE (__data_end, .)

.bss            0x00800080       0xa1 load address 0x000004ce
                0x00800080                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800080        0x0 atmega8pir.o
 .bss           0x00800080        0x0 com_def.o
 .bss           0x00800080        0x0 uart.o
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_mulsi3.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodhi4.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_divmodsi4.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_exit.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodhi4.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr4\libgcc.a(_udivmodsi4.o)
 .bss           0x00800080        0x0 c:/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr4\libc.a(strcpy.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800080       0xa1 uart.o
                0x00800080                rx_buffer
                0x00800120                buff_index
                0x00800121                PROVIDE (__bss_end, .)
                0x000004ae                __data_load_start = LOADADDR (.data)
                0x000004ce                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800121        0x0
                0x00800121                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800121                PROVIDE (__noinit_end, .)
                0x00800121                _end = .
                0x00800121                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 atmega8pir.o
 .debug_aranges
                0x00000020       0x20 com_def.o
 .debug_aranges
                0x00000040       0x20 uart.o

.debug_pubnames
                0x00000000      0x10c
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b atmega8pir.o
 .debug_pubnames
                0x0000001b       0x5b com_def.o
 .debug_pubnames
                0x00000076       0x96 uart.o

.debug_info     0x00000000      0x5eb
 *(.debug_info)
 .debug_info    0x00000000      0x183 atmega8pir.o
 .debug_info    0x00000183      0x1e5 com_def.o
 .debug_info    0x00000368      0x283 uart.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x309
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x105 atmega8pir.o
 .debug_abbrev  0x00000105       0xcd com_def.o
 .debug_abbrev  0x000001d2      0x137 uart.o

.debug_line     0x00000000      0x4f6
 *(.debug_line)
 .debug_line    0x00000000      0x199 atmega8pir.o
 .debug_line    0x00000199      0x1b9 com_def.o
 .debug_line    0x00000352      0x1a4 uart.o

.debug_frame    0x00000000       0xf0
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 atmega8pir.o
 .debug_frame   0x00000020       0x60 com_def.o
 .debug_frame   0x00000080       0x70 uart.o

.debug_str      0x00000000      0x1db
 *(.debug_str)
 .debug_str     0x00000000       0xb2 atmega8pir.o
                                 0xf2 (size before relaxing)
 .debug_str     0x000000b2       0xaa com_def.o
                                0x13d (size before relaxing)
 .debug_str     0x0000015c       0x7f uart.o
                                0x11e (size before relaxing)

.debug_loc      0x00000000      0x3de
 *(.debug_loc)
 .debug_loc     0x00000000       0xc0 atmega8pir.o
 .debug_loc     0x000000c0      0x2a2 com_def.o
 .debug_loc     0x00000362       0x7c uart.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(atmega8pir.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x48 atmega8pir.o
